name: CI/CD Pipeline - AgendaMed (Offline Docker)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: 🏗️ Build & Test com Maven
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do repositório
      - name: 📥 Checkout do repositório
        uses: actions/checkout@v4

      # 2️⃣ Debug opcional do workspace
      - name: 🔍 Verificar diretório
        run: |
          pwd
          ls -R

      # 3️⃣ Configurar Java 17
      - name: ☕ Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 4️⃣ Cache do Maven
      - name: 📦 Cache do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # 5️⃣ Build e testes Maven
      - name: 🧪 Build e Testes Maven
        working-directory: agendamed
        run: mvn -B verify

  docker-build:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📥 Checkout do repositório
        uses: actions/checkout@v4

      # Build Docker localmente
      - name: Build Docker image localmente
        run: docker build -t agendamed:latest ./agendamed

      # Salvar imagem Docker como arquivo tar
      - name: Salvar imagem Docker como arquivo
        run: docker save agendamed:latest -o agendamed.tar

      - name: Upload Docker image como artefato
        uses: actions/upload-artifact@v4
        with:
          name: agendamed-image
          path: agendamed.tar


  deploy-dev:
    name: Deploy em Development
    runs-on: ubuntu-latest
    needs: docker-build
    environment:
      name: development
    steps:
      - name: Baixar artefato da imagem Docker
        uses: actions/download-artifact@v4
        with:
          name: agendamed-image
          path: .


      # Carregar imagem Docker no runner
      - name: Carregar imagem Docker
        run: docker load -i agendamed.tar

      # Rodar container para simular deploy
      - name: Rodar container
        run: docker run --rm agendamed:latest

  deploy-prod:
    name: Deploy em Production
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: production
    steps:
      # Baixar artefato da imagem Docker
      - name: Baixar artefato da imagem Docker
        uses: actions/download-artifact@v4
        with:
          name: agendamed-image
          path: .

      # Carregar imagem Docker no runner
      - name: Carregar imagem Docker
        run: docker load -i agendamed.tar

      # Rodar container para simular deploy
      - name: Rodar container
        run: docker run --rm agendamed:latest
