name: CI/CD Pipeline - AgendaMed

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name:  Build & Test com Maven
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./agendamed/agendamed

    steps:
      - name:  Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name:  Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name:  Cache do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name:  Build e Testes com Maven
        run: mvn -B verify

  docker-build:
    name:  Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name:  Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name:  Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üê≥ Build da imagem Docker
        run: docker build ./agendamed/agendamed -t agendamed:latest


  deploy-dev:
    name:  Deploy em Development
    runs-on: ubuntu-latest
    needs: docker-build
    environment:
      name: development
    steps:
      - run: echo "Simulando deploy no ambiente de Desenvolvimento..."

  deploy-prod:
    name:  Deploy em Production
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: production
    steps:
      - run: echo "Simulando deploy no ambiente de Produ√ß√£o..."
